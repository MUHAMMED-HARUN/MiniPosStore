
@model BAL.BALDTO.OrderBALDTO
@using BAL.BALDTO
@{
    ViewData["Title"] = Model.ID == 0 ? "إنشاء طلب جديد" : "تعديل الطلب";
}

@section Styles {
    <link rel="stylesheet" href="~/css/orders.css" />
}

<h1>@ViewData["Title"]</h1>

<!-- Toast container -->
<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3"></div>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Save" method="post" id="orderForm">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input hidden readonly asp-for="OrderID" />


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="CustomerID" class="control-label">العميل</label>
                        <select asp-for="CustomerID" class="form-control" asp-items="ViewBag.CustomerList">
                            <option value="">-- اختر العميل --</option>
                        </select>
                        <span asp-validation-for="CustomerID" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="OrderDate" class="control-label">تاريخ الطلب</label>
                        <input asp-for="OrderDate" class="form-control" type="date" />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="TotalAmount" class="control-label">المبلغ الإجمالي</label>
                        <input asp-for="TotalAmount" class="form-control" readonly />
                        <span asp-validation-for="TotalAmount" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="PaidAmount" class="control-label">المبلغ المدفوع</label>
                        <input asp-for="PaidAmount" class="form-control" />
                        <span asp-validation-for="PaidAmount" class="text-danger"></span>
                    </div>
                </div>

           
            </div>

            <div class="form-group mb-3">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> حفظ
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> العودة للقائمة
                </a>
            </div>
        </form>
    </div>

    <!-- معلومات العميل -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-info-circle"></i> معلومات العميل
                </h5>
            </div>
            <div class="card-body">
                <div id="customerInfo">
                    @if (Model.OrderID > 0 && !string.IsNullOrEmpty(Model.FirstName))
                    {
                        <p><strong>الاسم:</strong> @(Model.FirstName + " " + Model.LastName)</p>
                        <p><strong>الهاتف:</strong> @Model.PhoneNumber</p>
                    }
                    else
                    {
                        <p class="text-muted">اختر عميلاً لعرض المعلومات</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.OrderID > 0)
{
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-list"></i> عناصر الطلب
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addItemModal">
                            <i class="fas fa-plus"></i> إضافة عنصر جديد
                        </button>
                    </div>

                    <div id="orderItems">
                        <!-- سيتم تحميل عناصر الطلب هنا عبر AJAX -->
                    </div>

                    <hr />

                    <div class="row">
                        <div class="col-md-3">
                            <strong>المبلغ الإجمالي:</strong> <span id="totalAmount">@Model.TotalAmount @BAL.clsGlobal.GetCurrencyTypeString(1)</span>
                        </div>
                        <div class="col-md-3">
                            <strong>المبلغ المدفوع:</strong> <span id="paidAmount">@Model.PaidAmount @BAL.clsGlobal.GetCurrencyTypeString(1)</span>
                        </div>
                        <div class="col-md-3">
                            <strong>المبلغ المتبقي:</strong> <span id="remainingAmount" class="text-danger">@((Model.TotalAmount - Model.PaidAmount) + BAL.clsGlobal.GetCurrencyTypeString(1))</span>
                        </div>
                        <div class="col-md-3">
                            <strong>عدد العناصر:</strong> <span id="itemsCount">0</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.OrderID > 0)
{
    @await Html.PartialAsync("_AddOrderItem", new OrderItemsBALDTO { OrderID = Model.ID })
    @await Html.PartialAsync("_EditOrderItem", new OrderItemsBALDTO { OrderID = Model.ID })
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $(document).ready(function () {

            // عرض رسالة النجاح إذا موجودة
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                showSuccessToast(successMessage);
            }

            // تحديث معلومات العميل عند تغيير العميل
            $('#CustomerID').change(function () {
                var customerId = $(this).val();
                if (customerId) {
                    // AJAX call لجلب معلومات العميل
                }
            });

            // تحميل عناصر الطلب إذا كان الطلب موجود
            @if (Model.ID > 0)
            {
                    <text>loadOrderItems();</text>
            }
        });

        // Toast رسائل النجاح
        function showSuccessToast(message) {
            var toastHtml = `
                <div class="toast align-items-center text-white bg-success border-0 mb-2" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="fas fa-check-circle"></i> ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            $('#toastContainer').append(toastHtml);
            var toastElement = $('#toastContainer .toast:last')[0];
            var toast = new bootstrap.Toast(toastElement);
            toast.show();
            $(toastElement).on('hidden.bs.toast', function () { $(this).remove(); });
        }

        // ==== وظائف عناصر الطلب ====

        function loadOrderItems() {
            var orderId = @Model.ID;
            $.get('/Orders/GetOrderItems', { orderId: orderId })
                .done(function (data) {
                    $('#orderItems').html(data);
                    updateOrderSummary();
                })
                .fail(function () {
                    $('#orderItems').html('<div class="alert alert-danger">حدث خطأ أثناء تحميل عناصر الطلب</div>');
                });
        }

        function updateOrderSummary() {
            var totalAmount = 0;
            var totalDiscount = 0;
            var finalAmount = 0;
            var itemsCount = 0;

            $('.order-item-row').each(function () {
                var itemTotal = parseFloat($(this).find('.item-total').text().replace(/[^\d.-]/g, '')) || 0;
                var itemDiscount = parseFloat($(this).find('.item-discount').text().replace(/[^\d.-]/g, '')) || 0;
                var itemFinal = parseFloat($(this).find('.item-final').text().replace(/[^\d.-]/g, '')) || 0;
                
                totalAmount += itemTotal;
                totalDiscount += itemDiscount;
                finalAmount += itemFinal;
                itemsCount++;
            });

            $('#totalAmount').text(finalAmount.toFixed(2) + ' د.ك');
            $('#itemsCount').text(itemsCount);

            var paidAmount = parseFloat($('#PaidAmount').val()) || 0;
            var remainingAmount = finalAmount - paidAmount;
            $('#remainingAmount').text(remainingAmount.toFixed(2) + ' د.ك');

            $('#TotalAmount').val(finalAmount.toFixed(2));
        }

        function deleteItem(itemId, orderId) {
            if (confirm('هل أنت متأكد من حذف هذا العنصر؟')) {
                $.post('/Orders/DeleteItem', { itemId: itemId, orderId: orderId })
                    .done(function () { loadOrderItems(); })
                    .fail(function () { alert('حدث خطأ أثناء حذف العنصر'); });
            }
        }

        function editOrderItem(itemId, orderId) {
            $.get('/Orders/GetOrderItemForEdit', { itemId: itemId })
                .done(function (data) {
                    if (data.success) {
                        $('#editItemModal #ID').val(data.item.id);
                        $('#editItemModal #OrderID').val(data.item.orderID);
                        $('#editItemModal #editProductSelect').val(data.item.productID);
                        $('#editItemModal #editQuantityInput').val(data.item.quantity);
                        $('#editItemModal #availableQuantityDisplay').val(data.item.availableQuantity);
                        $('#editItemModal #editSellingPriceInput').val(data.item.sellingPrice);

                        if (data.item.productID) { loadEditProductInfo(data.item.productID); }
                        calculateEditItemTotal();
                        $('#editItemModal').modal('show');
                    } else {
                        alert('خطأ في تحميل بيانات العنصر: ' + data.message);
                    }
                })
                .fail(function () { alert('حدث خطأ في الاتصال بالخادم'); });
        }

        function loadEditProductInfo(productId) {
            $.get('/Orders/GetProductInfo', { productId: productId })
                .done(function (data) {
                    if (data.success) {
                        $('#editBasePrice').text(data.retailPrice + ' ' + data.currencyType);
                        $('#editAvailableQuantity').text(data.availableQuantity);
                        $('#editUnitOfMeasure').text(data.uomName);
                        $('#editAvailableQuantityDisplay').val(data.availableQuantity);
                    }
                });
        }

        function calculateEditItemTotal() {
            var quantity = parseFloat($('#editQuantityInput').val()) || 0;
            var price = parseFloat($('#editSellingPriceInput').val()) || 0;
            var total = quantity * price;
            $('#editItemTotalAmount').val(total.toFixed(2));
        }

    </script>
    <script src="~/js/Product.js" asp-append-version="true"></script>

}

